#include<SoftwareSerial.h>
#include <LiquidCrystal_I2C.h>
#include <Wire.h>
#include <Sodaq_DS3231.h>
#include <Servo.h>

LiquidCrystal_I2C lcd(0x27, 16, 2);
SoftwareSerial mySerial(3, 2);

Servo Servo1;
bool isOpen = false;
int temp = 0;
bool ask = true;
int tempask = 1;
int bulbask = 1;
bool ask2 = true;


int smokeA0 = A0;
// My threshold value
int sensorThres =200;

int hr = 15;
int mn = 45;
const int x = 45;
int sec = x;

int passcheck = 0;

String state1 = "OFF";
String state2 = "OFF";
String last = "";
int REY1 = 7;
int REY2 = 8;

String message;
bool pass = false;


const int trigPin = 9;
const int echoPin = 11;
const int buzzer = 10;
const int ledPin = 13;

// defines variables
long duration;
int distance;
int safetyDistance;

void setup() {
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  pinMode(buzzer, OUTPUT);
  pinMode(ledPin, OUTPUT);

 
  pinMode(buzzer, OUTPUT);
  pinMode(smokeA0, INPUT);
    Servo1.attach(6);

  Serial.begin(9600);
  mySerial.begin(9600); // Setting the baud rate of GSM Module
  Wire.begin();
  lcd.init();
  lcd.backlight();
 
  delay(2000);

  pinMode(REY1, OUTPUT);
  pinMode(REY2, OUTPUT);

  digitalWrite(REY1, LOW);
  digitalWrite(REY2, LOW);
  enterpassword();
 
}

void loop() {
  if (mySerial.available() > 0) {
   
    Serial.println("loop me enter hu");

   
    Serial.println("loop me enter hu2");

   

    message = mySerial.readString();

   
    delay(3000);

    if(message.indexOf("123") > -1){
      Serial.println("Correct");
      pass = true;
     mySerial.println("AT+CMGS=\"+918957895881\"\r"); // Replace x with mobile number
      delay(1000);
      mySerial.println("THE CHAMBER OF SECRET HAS BEEN OPENED");// The SMS text you want to send

      delay(100);
     
      mySerial.println((char)26);// ASCII code of CTRL+Z

      delay(2000);
          mySerial.println("AT+CMGS=\"+918957895881\"\r"); // Replace x with mobile number
      delay(1000);
      mySerial.println("ALOHMORA!!");// The SMS text you want to send

      delay(100);
     
      mySerial.println((char)26);// ASCII code of CTRL+Z

      delay(1000);
    }
  }
 

  while (pass)
  {
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("S.H.O.D.");

    // TEMPERATURE FEATURE
    temperaturefeature();

    Serial.println("time aagya");
    checksmoke();
    alarmcheck();
    doorcheck();
    sendmessagefordevice1();
 


    mn = x + (millis() / 60000);

    if (mn >= 60)
    { hr++;
      mn = mn - 60;
    }
    if (hr >= 24)
    {

      hr = 00;
    }
  }
}
//.............................................................................................//
void enterpassword()
{
  mySerial.println("AT+CMGF=1"); // set text mode
  Serial.println("11");
  delay(1000);

  mySerial.println("AT+CNMI=2,2,0,0,0"); // AT Command to receive a live SMS
  Serial.println("22");
  delay(1000);


  delay(100);
  mySerial.println("AT+CMGF=1");    //Sets the GSM Module in Text Mode

  delay(1000);  // Delay of 1000 milli seconds or 1 second

  mySerial.println("AT+CMGS=\"+918957895881\"\r"); // Replace x with mobile number

  delay(1000);

  mySerial.println("enter password");// The SMS text you want to send
  Serial.print("Enter password");
  delay(100);
  //
  mySerial.println((char)26);// ASCII code of CTRL+Z

  delay(1000);
}


void temperaturefeature()
{
  temp = rtc.getTemperature();
  Serial.println(temp);
  lcd.setCursor(10, 0);
  lcd.print(temp);
  lcd.setCursor(12, 0);
  lcd.print(" C");
  lcd.setCursor(0, 1);
  lcd.print("Time:");
  lcd.setCursor(5, 1);
  if (hr < 10)
  {
    lcd.print("0");
    lcd.setCursor(6, 1);
  }
  lcd.print(hr);
  lcd.setCursor(7, 1);
  lcd.print(":");
  lcd.setCursor(8, 1);
  if (mn < 10)
  {
    lcd.print("0");
    lcd.setCursor(9, 1);
  }
  lcd.print(mn);



  delay(100);

}

//...........................................................................//
void sendmessagefordevice1()
{
  if (mySerial.available() > 0)
  {
    message = mySerial.readString();
    if (message.indexOf("LUMOS") > -1)
    {
      digitalWrite(REY1, HIGH);
      Serial.println("On");

      state1 = "ON";
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("State:Device1=");
      lcd.setCursor(14, 0);
      lcd.print(state1)  ;
      lcd.setCursor(6, 1);
      lcd.print("Device2=");
      lcd.setCursor(14, 1);
      lcd.print(state2)  ;
      delay(2000);
      mySerial.println("AT+CMGF=1");    //Sets the GSM Module in Text Mode
      delay(1000);  // Delay of 1000 milli seconds or 1 second
      mySerial.println("AT+CMGS=\"+918957895881\"\r"); // Replace x with mobile number
      last = "Device 1->ON";
      delay(1000);
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Last action=");
      lcd.setCursor(0, 1);
      lcd.print(last);
      delay(2000);
      mySerial.println("light is on my potterhead");// The SMS text you want to send
      delay(100);
      mySerial.println((char)26);// ASCII code of CTRL+Z
      delay(1000);


    }
    if (message.indexOf("NOX") > -1)
    {

      digitalWrite(REY1, LOW);
      Serial.println("off");

      state1 = "OFF";
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("State:Device1=");
      lcd.setCursor(14, 0);
      lcd.print(state1)  ;
      lcd.setCursor(6, 1);
      lcd.print("Device2=");
      lcd.setCursor(14, 1);
      lcd.print(state2)  ;
      delay(2000);
      mySerial.println("AT+CMGF=1");    //Sets the GSM Module in Text Mode

      delay(1000);  // Delay of 1000 milli seconds or 1 second

      mySerial.println("AT+CMGS=\"+918957895881\"\r"); // Replace x with mobile number
      delay(1000);

      last = "Device 1->OFF";

      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Last action=");
      lcd.setCursor(0, 1);
      lcd.print(last);
      delay(2000);

      mySerial.println("you are again in dark potterhead");// The SMS text you want to send

      delay(100);
      //
      mySerial.println((char)26);// ASCII code of CTRL+Z

      delay(1000);


    }
    if (message.indexOf("EXPECTO") > -1)
    {
      digitalWrite(REY2, HIGH);
      Serial.println("On");

      state2 = "ON";
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("State:Device1=");
      lcd.setCursor(14, 0);
      lcd.print(state1)  ;
      lcd.setCursor(6, 1);
      lcd.print("Device2=");
      lcd.setCursor(14, 1);
      lcd.print(state2)  ;
      delay(2000);
      mySerial.println("AT+CMGF=1");    //Sets the GSM Module in Text Mode
      delay(1000);  // Delay of 1000 milli seconds or 1 second
      mySerial.println("AT+CMGS=\"+918957895881\"\r"); // Replace x with mobile number
      last = "Device 2->ON";
      delay(1000);
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Last action=");
      lcd.setCursor(0, 1);
      lcd.print(last);
      delay(2000);
      mySerial.println("device 2 is on");// The SMS text you want to send
      delay(100);
      mySerial.println((char)26);// ASCII code of CTRL+Z
      delay(1000);


    }

    if(message.indexOf("PATRONUM") > -1)
     {

      digitalWrite(REY2 , LOW);
      Serial.println("off");

      state2 = "OFF";
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("State:Device1=");
      lcd.setCursor(14, 0);
      lcd.print(state1)  ;
      lcd.setCursor(6, 1);
      lcd.print("Device2=");
      lcd.setCursor(14, 1);
      lcd.print(state2)  ;
      delay(2000);
      mySerial.println("AT+CMGF=1");    //Sets the GSM Module in Text Mode

      delay(1000);  // Delay of 1000 milli seconds or 1 second

      mySerial.println("AT+CMGS=\"+918957895881\"\r"); // Replace x with mobile number
      delay(1000);

      last = "Device 2->OFF";

      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Last action=");
      lcd.setCursor(0, 1);
      lcd.print(last);
      delay(2000);

      mySerial.println("device 2 is off");// The SMS text you want to send

      delay(100);
      //
      mySerial.println((char)26);// ASCII code of CTRL+Z

      delay(1000);


    }
  }
}
//.........................................................................//
void checksmoke() {
  int analogSensor = analogRead(smokeA0);
  // Checks if it has reached the threshold value
  if (analogSensor > sensorThres)
  {
   
    digitalWrite(buzzer, HIGH);
    Serial.println(analogSensor);;
    Serial.println(" fire");
    mySerial.println("AT+CMGF=1");    //Sets the GSM Module in Text Mode
    delay(1000);  // Delay of 1000 milli seconds or 1 second
    mySerial.println("AT+CMGS=\"+918957895881\"\r");
    delay(1000);
    mySerial.println("INCENDIO(FIRE ALARM)");// The SMS text you want to send
    delay(100);
    mySerial.println((char)26);// ASCII code of CTRL+Z
    delay(1000);


  }
  else
  {
   
    digitalWrite(buzzer, LOW);
    Serial.println("no fire");
    Serial.println(analogSensor);
  }
  delay(50);
}
//.........................................................................//
void alarmcheck()
{
  if (hr == 6 && mn == 30)
  { lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Good Morning");
                              // ...for 1 sec
    digitalWrite(buzzer, LOW);     // Stop sound...
 
  }
  if (hr == 23 && mn == 30)
  { lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Time to sleep");
    lcd.setCursor(0, 1);
    lcd.print("Good Night");
    digitalWrite(buzzer, HIGH); // Send 1KHz sound signal...
 
  }
}
//.........................................................................//
void doorcheck()
{
 digitalWrite(trigPin, LOW);
  delayMicroseconds(2);

  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);

  // Calculating the distance
  distance = duration * 0.034 / 2;
   Serial.println(safetyDistance);
  safetyDistance = distance;
  if (safetyDistance <= 10) {
    digitalWrite(buzzer, HIGH);
    digitalWrite(ledPin, HIGH);
    opengate();
    mySerial.println("AT+CMGF=1");    //Sets the GSM Module in Text Mode
    delay(1000);  // Delay of 1000 milli seconds or 1 second
    mySerial.println("AT+CMGS=\"+918957895881\"\r");
    delay(1000);
    mySerial.println("ALOHMORA!!");// The SMS text you want to send
    delay(100);
    mySerial.println((char)26);// ASCII code of CTRL+Z
    delay(1000);
  }
  else {
    closeGate();
    digitalWrite(buzzer, LOW);
    digitalWrite(ledPin, LOW);
  }

  // Prints the distance on the Serial Monitor
  Serial.print("Distance: ");
  Serial.println(distance);
}

void closeGate()
{
  if (isOpen) {
    Serial.println("Close gate");
    Servo1.write(95);
    isOpen = false;
  }
}


void opengate() {
  // Make servo go to 0 degrees
  if (!isOpen) {
    Serial.println("open gate");
    // Make servo go to 90 degrees
    Servo1.write(0);
  }

  isOpen = true;
  delay(2000);
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------